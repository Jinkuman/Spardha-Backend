{
 "Resources": {
  "spottedTable9128D7CE": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "spotted-table"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedTable/Resource"
   }
  },
  "SpottedImagesBucket48C6F90F": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SrcStack/SpottedImagesBucket/Resource"
   }
  },
  "SpottedImagesBucketPolicyA4AFF032": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "SpottedImagesBucket48C6F90F"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SpottedImagesBucket48C6F90F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SpottedImagesBucket48C6F90F",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/SpottedImagesBucket/Policy/Resource"
   }
  },
  "SpottedImagesBucketAutoDeleteObjectsCustomResource65EC88C3": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "SpottedImagesBucket48C6F90F"
    }
   },
   "DependsOn": [
    "SpottedImagesBucketPolicyA4AFF032"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SrcStack/SpottedImagesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "SpottedImagesBucket48C6F90F"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "SrcStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "spottedHandlerServiceRoleD9893C34": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedHandler/ServiceRole/Resource"
   }
  },
  "spottedHandlerServiceRoleDefaultPolicyAB6B7109": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "spottedTable9128D7CE",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SpottedImagesBucket48C6F90F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SpottedImagesBucket48C6F90F",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "spottedHandlerServiceRoleDefaultPolicyAB6B7109",
    "Roles": [
     {
      "Ref": "spottedHandlerServiceRoleD9893C34"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "spottedHandler8DC8F628": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ddfb11fb7f021a1b04af4184c21d375f3323cd42f364af6d8b7b87c34814fe3e.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "spottedTable9128D7CE"
      },
      "BUCKET_NAME": {
       "Ref": "SpottedImagesBucket48C6F90F"
      }
     }
    },
    "FunctionName": "spottedHandler",
    "Handler": "spottedHandler.handler",
    "Role": {
     "Fn::GetAtt": [
      "spottedHandlerServiceRoleD9893C34",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "spottedHandlerServiceRoleDefaultPolicyAB6B7109",
    "spottedHandlerServiceRoleD9893C34"
   ],
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedHandler/Resource",
    "aws:asset:path": "asset.ddfb11fb7f021a1b04af4184c21d375f3323cd42f364af6d8b7b87c34814fe3e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "spottedAPI807A0478": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "spotted Service"
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Resource"
   }
  },
  "spottedAPIDeployment9D00ABBD233d1d9f4cd6e0be36be4285937ade24": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    }
   },
   "DependsOn": [
    "spottedAPIspottedGET68D61404",
    "spottedAPIspottedPOST80BCC4EF",
    "spottedAPIspottedPUT5445E711",
    "spottedAPIspotted55EDC5EA"
   ],
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Deployment/Resource"
   }
  },
  "spottedAPIDeploymentStageprod59BA7BCE": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "spottedAPIDeployment9D00ABBD233d1d9f4cd6e0be36be4285937ade24"
    },
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/DeploymentStage.prod/Resource"
   }
  },
  "spottedAPIspotted55EDC5EA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "spottedAPI807A0478",
      "RootResourceId"
     ]
    },
    "PathPart": "spotted",
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/Resource"
   }
  },
  "spottedAPIspottedPOSTApiPermissionSrcStackspottedAPI821F99D9POSTspottedF09260E7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/",
       {
        "Ref": "spottedAPIDeploymentStageprod59BA7BCE"
       },
       "/POST/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/POST/ApiPermission.SrcStackspottedAPI821F99D9.POST..spotted"
   }
  },
  "spottedAPIspottedPOSTApiPermissionTestSrcStackspottedAPI821F99D9POSTspotted1C32A69E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/test-invoke-stage/POST/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/POST/ApiPermission.Test.SrcStackspottedAPI821F99D9.POST..spotted"
   }
  },
  "spottedAPIspottedPOST80BCC4EF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "spottedHandler8DC8F628",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "spottedAPIspotted55EDC5EA"
    },
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/POST/Resource"
   }
  },
  "spottedAPIspottedGETApiPermissionSrcStackspottedAPI821F99D9GETspotted0B10AECF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/",
       {
        "Ref": "spottedAPIDeploymentStageprod59BA7BCE"
       },
       "/GET/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/GET/ApiPermission.SrcStackspottedAPI821F99D9.GET..spotted"
   }
  },
  "spottedAPIspottedGETApiPermissionTestSrcStackspottedAPI821F99D9GETspotted8F7D245C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/test-invoke-stage/GET/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/GET/ApiPermission.Test.SrcStackspottedAPI821F99D9.GET..spotted"
   }
  },
  "spottedAPIspottedGET68D61404": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "spottedHandler8DC8F628",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "spottedAPIspotted55EDC5EA"
    },
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/GET/Resource"
   }
  },
  "spottedAPIspottedPUTApiPermissionSrcStackspottedAPI821F99D9PUTspotted5D440D32": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/",
       {
        "Ref": "spottedAPIDeploymentStageprod59BA7BCE"
       },
       "/PUT/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/PUT/ApiPermission.SrcStackspottedAPI821F99D9.PUT..spotted"
   }
  },
  "spottedAPIspottedPUTApiPermissionTestSrcStackspottedAPI821F99D9PUTspotted1834E843": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "spottedHandler8DC8F628",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "spottedAPI807A0478"
       },
       "/test-invoke-stage/PUT/spotted"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/PUT/ApiPermission.Test.SrcStackspottedAPI821F99D9.PUT..spotted"
   }
  },
  "spottedAPIspottedPUT5445E711": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "spottedHandler8DC8F628",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "spottedAPIspotted55EDC5EA"
    },
    "RestApiId": {
     "Ref": "spottedAPI807A0478"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/spottedAPI/Default/spotted/PUT/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QzW7CMBCEn4V72PIjcQeq3lBR6B1t4oUuie0oa4MiK+9e2Y4Kqnqab1djz9grWG42sJjhQ+a1auYtVxBODuumwIecgxoMaqsqCF9YtVTsLybBWMgaws7XDbm4nCjL0bZcD8/1NOdhh0Jj0aKuFEL48KZ2bE00v/KRes0ibM1YMGoIpc3pSZ8BmWKbM4qQE9hGKbDjKzp64AChJHHbjtPpCd+pa+2gyaTyL9PJ4TXlZChJrO9riqV/h+mizAdy31bFVaZxfPF5cVb/eyz6sevYXP+4jr29s6I+Jaa3xCbJdzGf3nU+Vd5bo9il7zFWEdzk7b5awHINy9lNmOe9N441QZn1B82QSdDoAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "SrcStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "spottedAPIEndpoint04D9D483": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "spottedAPI807A0478"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "spottedAPIDeploymentStageprod59BA7BCE"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}